[versions]
# Plugins
kotlin = "1.8.0"
android-gradle-plugin = "8.10.0"

# Dependencies
compose = "1.4.0"
room = "2.7.1"
retrofit = "2.11.0"
nav = "2.5.3"
core-ktx = "1.16.0"
lifecycle-runtime-ktx = "2.9.0"
activity-compose = "1.7.1"
lifecycle-viewmodel-compose = "2.9.0"
okhttp-logging = "4.12.0"
coil = "2.7.0"
coroutines = "1.10.2"
junit = "4.13.2"
androidx-test-ext = "1.2.1"
espresso = "3.6.1"

[libraries]
# Plugins
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "android-gradle-plugin" }

# Core Android
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle-runtime-ktx" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }

# Compose
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }
compose-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle-viewmodel-compose" }

# Navigation
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "nav" }

# Room
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }

# Retrofit
retrofit-core = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp-logging" }

# Coil
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

# Coroutines
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

# Testing
junit = { module = "junit:junit", version.ref = "junit" }
androidx-test-ext = { module = "androidx.test.ext:junit", version.ref = "androidx-test-ext" }
androidx-test-espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose" }

[bundles]
compose = ["compose-ui", "compose-ui-tooling-preview", "compose-material", "compose-material-icons-extended", "compose-lifecycle-viewmodel"]
room = ["room-runtime", "room-ktx"]
retrofit = ["retrofit-core", "retrofit-converter-gson", "okhttp-logging-interceptor"]
testing = ["junit", "androidx-test-ext", "androidx-test-espresso"]
compose-debug = ["compose-ui-tooling", "compose-ui-test-manifest"]